// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using minimalAPIef;

#nullable disable

namespace minimalAPIef.Migrations
{
    [DbContext(typeof(TaskContext))]
    [Migration("20220624022802_InitialData")]
    partial class InitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("minimalAPIef.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("weight")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("e911afe8-8bf3-4308-827a-85a2c9742cd9"),
                            Name = "ActivitiesPending",
                            weight = 20
                        },
                        new
                        {
                            CategoryId = new Guid("e911afe8-8bf3-4308-827a-85a2c9742c02"),
                            Name = "ActivitiesPersonal",
                            weight = 50
                        });
                });

            modelBuilder.Entity("minimalAPIef.Models.Task", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriorityTask")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TaskId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("57f0795e-b5b5-416a-b6b2-5fc1193c17ad"),
                            CategoryId = new Guid("e911afe8-8bf3-4308-827a-85a2c9742cd9"),
                            CreationDate = new DateTime(2022, 6, 23, 21, 28, 1, 676, DateTimeKind.Local).AddTicks(9388),
                            PriorityTask = 1,
                            Title = "Utility Payment"
                        },
                        new
                        {
                            TaskId = new Guid("57f0795e-b5b5-416a-b6b2-5fc1193c1702"),
                            CategoryId = new Guid("e911afe8-8bf3-4308-827a-85a2c9742c02"),
                            CreationDate = new DateTime(2022, 6, 23, 21, 28, 1, 676, DateTimeKind.Local).AddTicks(9410),
                            PriorityTask = 0,
                            Title = "end up of view movies in netflix"
                        });
                });

            modelBuilder.Entity("minimalAPIef.Models.Task", b =>
                {
                    b.HasOne("minimalAPIef.Models.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("minimalAPIef.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
